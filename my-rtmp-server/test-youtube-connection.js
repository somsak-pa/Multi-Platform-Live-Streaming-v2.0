// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ YouTube Stream
require('dotenv').config();
const { spawn } = require('child_process');
const fs = require('fs');

console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ YouTube Stream...\n');

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö YouTube Stream Key
const youtubeKey = process.env.YOUTUBE_STREAM_KEY;
console.log('üì∫ YouTube Stream Key:');
if (youtubeKey) {
    console.log(`   ‚úÖ ‡∏û‡∏ö Stream Key: ${youtubeKey.substring(0, 4)}...${youtubeKey.substring(youtubeKey.length-4)}`);
    console.log(`   üìè ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß: ${youtubeKey.length} ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£`);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô pattern ‡∏Ç‡∏≠‡∏á test key ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
    if (youtubeKey === 'test123' || youtubeKey === 'your-key-here' || youtubeKey.includes('test-key')) {
        console.log('   ‚ùå ‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô TEST KEY! ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡πÑ‡∏õ YouTube ‡πÑ‡∏î‡πâ');
        console.log('   üîó ‡πÑ‡∏õ‡∏ó‡∏µ‡πà: https://studio.youtube.com > Go Live > Stream settings\n');
        process.exit(1);
    } else {
        console.log('   ‚úÖ ‡πÉ‡∏ä‡πâ YouTube Stream Key ‡∏à‡∏£‡∏¥‡∏á');
    }
} else {
    console.log('   ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö YouTube Stream Key!');
    console.log('   üí° ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô .env file: YOUTUBE_STREAM_KEY=your-key-here\n');
    process.exit(1);
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö FFmpeg
const ffmpegPath = 'C:/ffmpeg/bin/ffmpeg.exe';
console.log('\nüé¨ FFmpeg:');
if (fs.existsSync(ffmpegPath)) {
    console.log(`   ‚úÖ ‡∏û‡∏ö FFmpeg ‡∏ó‡∏µ‡πà: ${ffmpegPath}`);
} else {
    console.log(`   ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö FFmpeg ‡∏ó‡∏µ‡πà: ${ffmpegPath}`);
    console.log('   üí° ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: https://ffmpeg.org/download.html\n');
    process.exit(1);
}

// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ YouTube (‡πÅ‡∏ö‡∏ö dry run)
console.log('\nüîó ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ YouTube...');
console.log('   (‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á ‡πÅ‡∏Ñ‡πà‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠)');

const testArgs = [
    '-f', 'lavfi',
    '-i', 'testsrc2=duration=5:size=320x240:rate=1',  // ‡∏™‡∏£‡πâ‡∏≤‡∏á test video 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    '-f', 'lavfi',
    '-i', 'sine=frequency=1000:duration=5',            // ‡∏™‡∏£‡πâ‡∏≤‡∏á test audio 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    '-c:v', 'libx264',
    '-preset', 'ultrafast',
    '-tune', 'zerolatency',
    '-b:v', '500k',
    '-c:a', 'aac',
    '-b:a', '128k',
    '-f', 'flv',
    '-t', '5',  // ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÄ‡∏ß‡∏•‡∏≤ 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    `rtmp://a.rtmp.youtube.com/live2/${youtubeKey}`
];

console.log(`   üì° ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö: rtmp://a.rtmp.youtube.com/live2/${youtubeKey.substring(0, 4)}...`);

const testProcess = spawn(ffmpegPath, testArgs);
let hasError = false;
let connectionSuccess = false;

testProcess.stderr.on('data', (data) => {
    const output = data.toString();
    
    if (output.includes('Server returned 404')) {
        console.log('   ‚ùå YouTube ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö 404 - Stream Key ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠ YouTube Live ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î');
        hasError = true;
    } else if (output.includes('Authentication failed')) {
        console.log('   ‚ùå Authentication ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß - Stream Key ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
        hasError = true;
    } else if (output.includes('Connection refused')) {
        console.log('   ‚ùå ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï');
        hasError = true;
    } else if (output.includes('Invalid stream key')) {
        console.log('   ‚ùå Stream Key ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
        hasError = true;
    } else if (output.includes('Non-monotonous DTS')) {
        // ‡∏õ‡∏Å‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á test - ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà error
    } else if (output.includes('frame=') && !connectionSuccess) {
        console.log('   ‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ YouTube ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...');
        connectionSuccess = true;
    }
});

testProcess.on('close', (code) => {
    console.log(`\nüìã ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:`);
    
    if (connectionSuccess && !hasError) {
        console.log('   üéâ ‚úÖ ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ YouTube ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
        console.log('   üì∫ YouTube Stream Key ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
        console.log('   üöÄ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£ streaming ‡∏à‡∏£‡∏¥‡∏á');
        console.log('\nüí° ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ:');
        console.log('   1. ‡πÄ‡∏£‡∏¥‡πà‡∏° RTMP Server: node server.js');
        console.log('   2. ‡πÄ‡∏£‡∏¥‡πà‡∏° React App');
        console.log('   3. ‡∏Å‡∏î Start Stream ‡πÉ‡∏ô UI');
    } else if (hasError) {
        console.log('   ‚ùå ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ YouTube ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
        console.log('   üîß ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:');
        console.log('     - YouTube Stream Key ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà');
        console.log('     - ‡πÄ‡∏õ‡∏¥‡∏î YouTube Live ‡πÉ‡∏ô YouTube Studio ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á');
        console.log('     - ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï‡∏õ‡∏Å‡∏ï‡∏¥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà');
    } else {
        console.log('   ‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ');
        console.log('   üí° ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏≠‡∏á‡∏™‡πà‡∏á stream ‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö');
    }
    
    console.log('\n' + '='.repeat(50));
});

testProcess.on('error', (err) => {
    console.log('   ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ FFmpeg ‡πÑ‡∏î‡πâ');
    console.log(`   üí° Error: ${err.message}`);
    process.exit(1);
});

// Timeout ‡∏´‡∏•‡∏±‡∏á 15 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
setTimeout(() => {
    if (testProcess && !testProcess.killed) {
        console.log('   ‚è∞ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏¢‡∏∏‡∏î...');
        testProcess.kill();
    }
}, 15000);