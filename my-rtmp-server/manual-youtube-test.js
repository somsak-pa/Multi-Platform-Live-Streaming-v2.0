// Manual Test р╕кр╕│р╕лр╕гр╕▒р╕Ъ YouTube Streaming
require('dotenv').config();
const { spawn } = require('child_process');
const fs = require('fs');

console.log('ЁЯзк Manual Test: р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕г Stream р╣Др╕Ы YouTube р╣Вр╕Фр╕вр╕Хр╕гр╕З\n');

const youtubeKey = process.env.YOUTUBE_STREAM_KEY;
const ffmpegPath = 'C:/ffmpeg/bin/ffmpeg.exe';

// р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ requirements
console.log('ЁЯУЛ Requirements Check:');
console.log(`- YouTube Key: ${youtubeKey ? 'тЬЕ' : 'тЭМ'} ${youtubeKey ? youtubeKey.substring(0,4)+'...'+youtubeKey.substring(youtubeKey.length-4) : 'Missing'}`);
console.log(`- FFmpeg: ${fs.existsSync(ffmpegPath) ? 'тЬЕ' : 'тЭМ'} ${ffmpegPath}`);

if (!youtubeKey || !fs.existsSync(ffmpegPath)) {
  console.log('\nтЭМ Requirements р╣Др╕бр╣Ир╕Др╕гр╕Ъ! р╕Бр╕гр╕╕р╕Ур╕▓р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ');
  process.exit(1);
}

console.log('\nЁЯОм р╕кр╕гр╣Йр╕▓р╕З Test Video р╣Бр╕ер╕░р╕кр╣Ир╕Зр╣Др╕Ы YouTube...');
console.log('тП░ р╕гр╕░р╕вр╕░р╣Ар╕зр╕ер╕▓: 30 р╕зр╕┤р╕Щр╕▓р╕Чр╕╡');
console.log('ЁЯУ║ р╣Др╕Ыр╕Фр╕╣р╕Чр╕╡р╣И YouTube Studio Dashboard р╣Др╕Фр╣Йр╣Ар╕ер╕в\n');

// р╕кр╕гр╣Йр╕▓р╕З test video pattern р╣Бр╕ер╕░р╕кр╣Ир╕Зр╣Др╕Ы YouTube
const args = [
  // р╕кр╕гр╣Йр╕▓р╕З test pattern
  '-f', 'lavfi',
  '-i', 'testsrc=duration=30:size=1280x720:rate=30',
  '-f', 'lavfi', 
  '-i', 'sine=frequency=1000:duration=30',
  
  // Video settings
  '-c:v', 'libx264',
  '-preset', 'veryfast',
  '-b:v', '2500k',
  '-maxrate', '2500k',
  '-bufsize', '5000k',
  '-vf', 'format=yuv420p',
  '-g', '50',
  '-r', '30',
  
  // Audio settings
  '-c:a', 'aac',
  '-b:a', '128k',
  '-ar', '44100',
  '-ac', '2',
  
  // Output
  '-f', 'flv',
  '-flvflags', 'no_duration_filesize',
  `rtmp://a.rtmp.youtube.com/live2/${youtubeKey}`
];

console.log('ЁЯЪА р╣Ар╕гр╕┤р╣Ир╕б FFmpeg...');
const ffmpeg = spawn(ffmpegPath, args);

let frameCount = 0;
let hasStarted = false;

ffmpeg.stdout.on('data', (data) => {
  console.log(`[STDOUT] ${data}`);
});

ffmpeg.stderr.on('data', (data) => {
  const output = data.toString();
  
  if (!hasStarted && (output.includes('Opening') || output.includes('Stream mapping:'))) {
    hasStarted = true;
    console.log('тЬЕ р╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н YouTube р╕кр╕│р╣Ар╕гр╣Зр╕И!');
  }
  
  if (output.includes('frame=')) {
    frameCount++;
    if (frameCount % 30 === 0) {
      console.log(`ЁЯУК р╕кр╣Ир╕Зр╣Др╕Ыр╣Бр╕ер╣Йр╕з ${frameCount} frames (${Math.round(frameCount/30)} р╕зр╕┤р╕Щр╕▓р╕Чр╕╡)`);
    }
  }
  
  // р╣Бр╕кр╕Фр╕З errors р╕кр╕│р╕Др╕▒р╕Н
  if (output.includes('403') || output.includes('404') || output.includes('Authentication failed')) {
    console.log(`тЭМ YouTube Error: ${output.trim()}`);
  }
  
  // р╣Бр╕кр╕Фр╕З status р╕кр╕│р╕Др╕▒р╕Н
  if (output.includes('Connection') || output.includes('Stream') || output.includes('Opening')) {
    console.log(`[FFmpeg] ${output.trim()}`);
  }
});

ffmpeg.on('close', (code) => {
  console.log(`\nЁЯПБ Test р╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ! (Exit code: ${code})`);
  console.log(`ЁЯУК р╕кр╣Ир╕Зр╣Др╕Ы YouTube р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф ${frameCount} frames`);
  
  if (code === 0) {
    console.log('тЬЕ Test р╕кр╕│р╣Ар╕гр╣Зр╕И! YouTube р╕Др╕зр╕гр╣Др╕Фр╣Йр╕гр╕▒р╕Ъ stream р╣Бр╕ер╣Йр╕з');
  } else {
    console.log('тЪая╕П  Test р╕бр╕╡р╕Ыр╕▒р╕Нр╕лр╕▓ р╕Бр╕гр╕╕р╕Ур╕▓р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ:');
    console.log('   - YouTube Stream Key р╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕Зр╕лр╕гр╕╖р╕нр╣Др╕бр╣И');
    console.log('   - YouTube Live Stream р╣Ар╕Ыр╕┤р╕Фр╕нр╕вр╕╣р╣Ир╕лр╕гр╕╖р╕нр╣Др╕бр╣И');
    console.log('   - Internet connection р╣Ар╕кр╕Цр╕╡р╕вр╕гр╕лр╕гр╕╖р╕нр╣Др╕бр╣И');
  }
  
  console.log('\n' + '='.repeat(50));
});

ffmpeg.on('error', (err) => {
  console.error(`тЭМ р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕гр╕┤р╣Ир╕б FFmpeg: ${err.message}`);
});

// Auto timeout
setTimeout(() => {
  console.log('\nтП░ р╕лр╕бр╕Фр╣Ар╕зр╕ер╕▓ Test р╕Бр╕│р╕ер╕▒р╕Зр╕лр╕вр╕╕р╕Ф...');
  if (ffmpeg && !ffmpeg.killed) {
    ffmpeg.kill('SIGTERM');
  }
}, 35000);

console.log('ЁЯТб р╕Бр╕Ф Ctrl+C р╣Ар╕Юр╕╖р╣Ир╕нр╕лр╕вр╕╕р╕Фр╕Бр╣Ир╕нр╕Щр╣Ар╕зр╕ер╕▓');