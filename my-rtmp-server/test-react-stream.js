// Test script р╣Ар╕Юр╕╖р╣Ир╕нр╕Ир╕│р╕ер╕нр╕Зр╕Бр╕▓р╕г stream р╕Ир╕▓р╕Б React App
import { spawn } from 'child_process';
import { existsSync } from 'fs';

console.log('ЁЯзк р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕г Stream р╣Бр╕Ър╕Ъ React App');
console.log('ЁЯОп р╕Ир╕│р╕ер╕нр╕Зр╕Бр╕▓р╕гр╕кр╣Ир╕З stream р╣Др╕Ы RTMP Server р╣Бр╕ер╣Йр╕з relay р╣Др╕Ы YouTube\n');

const ffmpegPath = 'C:/ffmpeg/bin/ffmpeg.exe';

if (!existsSync(ffmpegPath)) {
    console.log('тЭМ р╣Др╕бр╣Ир╕Юр╕Ъ FFmpeg!');
    process.exit(1);
}

console.log('ЁЯУб р╣Ар╕гр╕┤р╣Ир╕бр╕кр╣Ир╕З test stream р╣Др╕Ы RTMP Server...');
console.log('тП░ р╕Ир╕░р╕Чр╕│р╕Зр╕▓р╕Щ 15 р╕зр╕┤р╕Щр╕▓р╕Чр╕╡');
console.log('ЁЯСА р╕Фр╕╣ terminal RTMP server р╕зр╣Ир╕▓р╕бр╕╡ YouTube relay р╣Ар╕гр╕┤р╣Ир╕бр╕лр╕гр╕╖р╕нр╣Др╕бр╣И\n');

// р╕кр╕гр╣Йр╕▓р╕З test stream р╣Бр╕ер╕░р╕кр╣Ир╕Зр╣Др╕Ы RTMP server (р╣Ар╕лр╕бр╕╖р╕нр╕Щ OBS/React App)
const streamArgs = [
    '-f', 'lavfi',
    '-i', 'testsrc=duration=15:size=1280x720:rate=30',
    '-f', 'lavfi',
    '-i', 'sine=frequency=440:duration=15',
    
    // Video encoding
    '-c:v', 'libx264',
    '-preset', 'ultrafast',
    '-b:v', '2500k',
    '-g', '60',
    '-keyint_min', '60',
    
    // Audio encoding
    '-c:a', 'aac',
    '-b:a', '128k',
    '-ar', '44100',
    '-ac', '2',
    
    // Output to RTMP server
    '-f', 'flv',
    '-y',
    'rtmp://127.0.0.1:1935/live/my-stream-key'
];

console.log('ЁЯЪА р╣Ар╕гр╕┤р╣Ир╕б FFmpeg...');
const streamProcess = spawn(ffmpegPath, streamArgs);

let frameCount = 0;
let connected = false;

streamProcess.stdout.on('data', (data) => {
    console.log(`[STREAM OUT] ${data}`);
});

streamProcess.stderr.on('data', (data) => {
    const output = data.toString();
    
    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н
    if (!connected && (output.includes('Stream mapping:') || output.includes('Opening'))) {
        connected = true;
        console.log('тЬЕ р╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н RTMP Server р╕кр╕│р╣Ар╕гр╣Зр╕И!');
    }
    
    // р╕Щр╕▒р╕Ъ frames
    if (output.includes('frame=')) {
        frameCount++;
        const match = output.match(/frame=\s*(\d+)/);
        if (match && parseInt(match[1]) % 30 === 0) {
            console.log(`ЁЯУК р╕кр╣Ир╕Зр╣Бр╕ер╣Йр╕з ${match[1]} frames (${Math.round(parseInt(match[1])/30)} р╕зр╕┤р╕Щр╕▓р╕Чр╕╡)`);
        }
    }
    
    // р╣Бр╕кр╕Фр╕З errors
    if (output.includes('Connection refused') || output.includes('error')) {
        console.log(`тЭМ [STREAM ERR] ${output.trim()}`);
    }
});

streamProcess.on('close', (code) => {
    console.log(`\nЁЯПБ Stream Test р╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ!`);
    console.log(`ЁЯУК Exit Code: ${code}`);
    console.log(`ЁЯУК Total Frames: ${frameCount}`);
    console.log(`ЁЯУК RTMP Connection: ${connected ? 'тЬЕ Success' : 'тЭМ Failed'}`);
    
    if (connected && code === 0) {
        console.log('\nЁЯОЙ Stream р╣Др╕Ы RTMP Server р╕кр╕│р╣Ар╕гр╣Зр╕И!');
        console.log('ЁЯТб р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ RTMP server log р╕зр╣Ир╕▓р╕бр╕╡ YouTube relay р╕лр╕гр╕╖р╕нр╣Др╕бр╣И');
    } else {
        console.log('\nЁЯФз р╕Ыр╕▒р╕Нр╕лр╕▓р╕Чр╕╡р╣Ир╣Ар╕Ыр╣Зр╕Щр╣Др╕Ыр╣Др╕Фр╣Й:');
        console.log('   - RTMP Server р╣Др╕бр╣Ир╕Чр╕│р╕Зр╕▓р╕Щ (р╕гр╕▒р╕Щ npm run start-streaming)');
        console.log('   - Port 1935 р╕Цр╕╣р╕Бр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╣Вр╕Фр╕вр╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕бр╕нр╕╖р╣Ир╕Щ');
        console.log('   - Firewall block р╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н');
    }
    
    console.log('\n' + '='.repeat(50));
});

streamProcess.on('error', (err) => {
    console.error(`тЭМ р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕гр╕┤р╣Ир╕б stream: ${err.message}`);
});

console.log('ЁЯТб р╕Бр╕Ф Ctrl+C р╣Ар╕Юр╕╖р╣Ир╕нр╕лр╕вр╕╕р╕Фр╕Бр╣Ир╕нр╕Щр╣Ар╕зр╕ер╕▓');